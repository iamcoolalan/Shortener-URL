<div class="container mt-5">
  <div class="mb-5">
    <form action="/" method="POST" class="needs-validation" novalidate>
      <div class="input-group mb-3">
        <label class="input-group-text border border-dark" for="OriginalUrl">Original URL:</label>
        <input type="text" class="form-control border border-dark" name="OriginalUrl" id="OriginalUrl"
          placeholder="enter your url over here" aria-label="OriginalUrl" aria-describedby="submit-button"
          pattern="^(https?|ftp):(\/{0,3})([0-9.\-A-Za-z]+)(:\d+)?(?:\/([^?#]*))?(?:\?([^#]*))?(?:#(.*))?$"
          required>
        <button class="btn btn-outline-dark" type="submit" id="submit-button">Convert</button>
        <div class="invalid-feedback">
          you didn't enter any URL or your URL is not a valid format
        </div>
      </div>
      <div class="input-group mb-3">
        <label class="input-group-text border border-dark" for="shortenerUrl">Short URL:</label>
        <input type="text" class="form-control border border-dark" id="shortenerUrl" placeholder="Short url will display over here"
          aria-label="shortenerUrl" aria-describedby="copy-button" value="{{ shortenerUrl }}" disabled>
        <button class="btn btn-outline-dark" type="button" id="copy-button">Copy</button>
      </div>
    </form>
  </div>

  <div>
    <table class="table caption-top align-middle">
      <caption>Last 5 records</caption>
      <colgroup>
        <col style="width: 60%;">
        <col style="width: 30%;">
        <col style="width: 10%;">
      </colgroup>
      <thead>
        <tr class="table-warning">
          <th scope="col">Original URL</th>
          <th scope="col">Short URL</th>
          <th scope="col"></th>
        </tr>
      </thead>
      <tbody>
        {{#each histories}}
        <tr class="table-light">
          <td>{{ this.originalUrl }}</td>
          <td>http://localhost:3000/cool.alan/{{ this.shortenerCode }}</td>
          <td class="text-end">
            <button class="btn btn-outline-secondary table-copy-button" type="button">Copy</button>
          </td>
        </tr>
        {{/each}}
      </tbody>
      <tfoot>
        <td></td>
        <td></td>
        <td class="text-end">
          <button class="btn btn-outline-dark" type="button">
            <a href="/history" id="more-btn">More...</a>
          </button>
        </td>
      </tfoot>
    </table>
  </div>
</div>

<script>
  function customerValidity(form, input) {
    if (form.checkValidity() || !input.value.trim()) {
      return true
    } else {
      return false
    }
  }



  // Example starter JavaScript for disabling form submissions if there are invalid fields
  (function () {
    'use strict'

    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    var forms = document.querySelectorAll('.needs-validation')
    const originalUrl = document.querySelector('#OriginalUrl')


    // Loop over them and prevent submission
    Array.prototype.slice.call(forms)
      .forEach(function (form) {
        form.addEventListener('submit', function (event) {
          if (!form.checkValidity()) {
            event.preventDefault()
            event.stopPropagation()
          }

          form.classList.add('was-validated')
        }, false)
      })
  })()

  const copyButton = document.querySelector('#copy-button')


  copyButton.addEventListener('click', () => {
    const URL = document.querySelector('#shortenerUrl')

    if (URL.value.trim()) {
      navigator.clipboard.writeText(URL.value)
        .then(() => alert('Copied!'))
        .catch(error => console.log(error))
    } else {
      alert('Short URL is empty')
    }

  })

  const tableCopyButtons = document.querySelectorAll('.table-copy-button')

  tableCopyButtons.forEach(btn => {
    btn.addEventListener('click', () => {
      const URL = btn.parentElement.previousElementSibling
      navigator.clipboard.writeText(URL.innerText)
        .then(() => alert('Copied!'))
        .catch(error => console.log(error))
    })
  })



</script>